syntax = "proto3";
package vkv;

import "google/protobuf/timestamp.proto";

message Configuration {
    int64 TTL = 1;
    uint32 max_versions = 2;
    bool cas_required = 3;
}

message VersionMetadata {
	// CreatedTime is when the version was created.
	google.protobuf.Timestamp created_time = 1;

	// ArchiveTime is the time this version becomes invalid. 
	// Set to Now() to archive the version before the configured 
	// archive time.
	google.protobuf.Timestamp archive_time = 2;

	// Destroyed is used to specify this version is
    // a has been removed and the underlying data deleted.
	bool destroyed = 3;
}

message KeyMetadata {
	// Key is the key for this entry
	string key = 1;

	// Versions is the map of versionID -> VersionMetadata.
    // Useful when listing all versions.
	map<uint64, VersionMetadata> versions = 2;

	// CurrentVersion is the latest version of the value
	uint64 current_version = 3;

	// OldestVersion is the oldest version of the value.
	uint64 oldest_version = 4;

	// Created time is when the metadata was created.
	google.protobuf.Timestamp created_time = 5;

	// Updated time was the last time the metadata version 
    // was updated.
	google.protobuf.Timestamp updated_time = 6;

	// VersionTTL specifies how long to keep versions 
    // around. If empty value, defaults to the configured
    // TTL for the mount.
	int64 versionTTL = 7;

    // MaxVersions specifies how many versions to keep around. 
    // If empty value, defaults to the configured Max 
    // for the mount.
	uint32 max_versions = 8;

	// CasRequired specifies if the cas parameter is 
    // required for this key
    bool cas_required = 9;
}


message Version {
	// Data is a JSON object with string keys that 
    // represents the user supplied data.
	bytes data = 1;

	// CreatedTime is when the version was created.
	google.protobuf.Timestamp created_time = 2;

	// ArchiveTime is the time this version becomes invalid. 
	// Set to Now() to archive the version before the configured 
	// archive time.
	google.protobuf.Timestamp archive_time = 3;
}

